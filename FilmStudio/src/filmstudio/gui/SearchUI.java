package filmstudio.gui;

import filmstudio.data.DataSearch;
import filmstudio.data.Database;
import filmstudio.movies.Movie;
import filmstudio.persons.Person;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;

/**
 * SearchUI-luokka, joka perii JFrame-luokan ja määrittää sen, mitä
 * merkkijonohakuun perustuva käyttöliittymä pitää sisällään.
 * 
 * Luokan pohja luotu Netbeansin GUI-builderilla.
 *
 * @author Eversor
 */
public class SearchUI extends javax.swing.JFrame {

    private DataSearch dataSearch;
    private List<Movie> movies;
    private List<Person> persons;
    private MovieModel movieModel;
    private PersonModel personModel;
    
    public SearchUI(Database database) {
        dataSearch = new DataSearch(database);
        movieModel = new MovieModel(movies);
        personModel = new PersonModel(persons);
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchLabel = new java.awt.Label();
        searchField = new java.awt.TextField();
        hintLabel = new java.awt.Label();
        searchPanel = new javax.swing.JTabbedPane();
        peopleTab = new javax.swing.JPanel();
        peopleScroll = new javax.swing.JScrollPane();
        peopleTable = new javax.swing.JTable() {
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
                Component c = super.prepareRenderer(renderer, row, column);
                JComponent jc = (JComponent) c;

                if (isRowSelected(row)) {
                    jc.setBorder(new MatteBorder(1, 0, 1, 0, new Color(99, 130, 191)));
                }

                return c;
            }
        };
        moviesTab = new javax.swing.JPanel();
        movieScroll = new javax.swing.JScrollPane();
        movieTable = new javax.swing.JTable() {
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
                Component c = super.prepareRenderer(renderer, row, column);
                JComponent jc = (JComponent) c;

                if (isRowSelected(row)) {
                    jc.setBorder(new MatteBorder(1, 0, 1, 0, new Color(99, 130, 191)));
                }

                return c;
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FilmStudio");
        setResizable(false);

        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchLabel.setText("Search");

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        hintLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hintLabel.setText("(leave empty for all)");

        peopleTable.setAutoCreateRowSorter(true);
        peopleTable.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        peopleTable.setModel(personModel);
        peopleTable.getColumnModel().setColumnMargin(0);
        peopleTable.setFillsViewportHeight(true);
        peopleTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        peopleTable.setShowHorizontalLines(false);
        peopleTable.setShowVerticalLines(false);
        peopleScroll.setViewportView(peopleTable);
        DefaultTableCellRenderer centerRendererPeople = new DefaultTableCellRenderer();
        centerRendererPeople.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < 4; i++) {
            peopleTable.getColumnModel().getColumn(i).setCellRenderer(centerRendererPeople);
        }

        peopleTable.getColumnModel().getColumn(1).setPreferredWidth(0);
        peopleTable.getColumnModel().getColumn(3).setPreferredWidth(0);

        javax.swing.GroupLayout peopleTabLayout = new javax.swing.GroupLayout(peopleTab);
        peopleTab.setLayout(peopleTabLayout);
        peopleTabLayout.setHorizontalGroup(
            peopleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(peopleTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(peopleScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );
        peopleTabLayout.setVerticalGroup(
            peopleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(peopleTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(peopleScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        searchPanel.addTab("People", peopleTab);

        movieTable.setAutoCreateRowSorter(true);
        movieTable.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        movieTable.setModel(movieModel);
        movieTable.getColumnModel().setColumnMargin(0);
        movieTable.setFillsViewportHeight(true);
        movieTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        movieTable.setShowHorizontalLines(false);
        movieTable.setShowVerticalLines(false);
        movieScroll.setViewportView(movieTable);
        DefaultTableCellRenderer centerRendererMovie = new DefaultTableCellRenderer();
        centerRendererMovie.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < 4; i++) {
            movieTable.getColumnModel().getColumn(i).setCellRenderer(centerRendererMovie);
        }

        movieTable.getColumnModel().getColumn(1).setPreferredWidth(0);
        movieTable.getColumnModel().getColumn(3).setPreferredWidth(0);

        javax.swing.GroupLayout moviesTabLayout = new javax.swing.GroupLayout(moviesTab);
        moviesTab.setLayout(moviesTabLayout);
        moviesTabLayout.setHorizontalGroup(
            moviesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moviesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(movieScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );
        moviesTabLayout.setVerticalGroup(
            moviesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moviesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(movieScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        searchPanel.addTab("Movies", moviesTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPanel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchPanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        persons = dataSearch.searchPersonByName(searchField.getText());
        movies = dataSearch.searchMovieByName(searchField.getText());

        searchPanel.setTitleAt(0, "People (" + persons.size() + " found)");
        searchPanel.setTitleAt(1, "Movies (" + movies.size() + " found)");
        
        personModel.updatePersons(persons);
        movieModel.updateMovies(movies);
    }//GEN-LAST:event_searchFieldActionPerformed
//    Voiko poistaa vai tarvitseeko olla?
//    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SearchUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SearchUI().setVisible(true);
//            }
//        });
//    } 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label hintLabel;
    private javax.swing.JScrollPane movieScroll;
    private javax.swing.JTable movieTable;
    private javax.swing.JPanel moviesTab;
    private javax.swing.JScrollPane peopleScroll;
    private javax.swing.JPanel peopleTab;
    private javax.swing.JTable peopleTable;
    private java.awt.TextField searchField;
    private java.awt.Label searchLabel;
    private javax.swing.JTabbedPane searchPanel;
    // End of variables declaration//GEN-END:variables
}
